<?xml version="1.0" encoding="UTF-8"?>
<issues format="4" by="lint 3.0.1">

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="  myContext.getSharedPreferences(&quot;kooreader.ui&quot;, Context.MODE_PRIVATE).edit()"
        errorLine2="  ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/config/ConfigShadow.java"
            line="107"
            column="3"/>
    </issue>

    <issue
        id="ApplySharedPref"
        severity="Warning"
        message="Consider using `apply()` instead; `commit` writes its data to persistent storage immediately, whereas `apply` will handle it in the background"
        category="Correctness"
        priority="6"
        summary="Use `apply()` on `SharedPreferences`"
        explanation="Consider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background."
        errorLine1="  myContext.getSharedPreferences(&quot;kooreader.ui&quot;, Context.MODE_PRIVATE).edit()"
        errorLine2="  ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/config/ConfigShadow.java"
            line="117"
            column="3"/>
    </issue>

    <issue
        id="Assert"
        severity="Warning"
        message="Assertions are unreliable in Dalvik and unimplemented in ART. Use `BuildConfig.DEBUG` conditional checks instead."
        category="Correctness"
        priority="6"
        summary="Assertions"
        explanation="Assertions are not checked at runtime. There are ways to request that they be used by Dalvik \&#xA;(`adb shell setprop debug.assert 1`), but note that this is not implemented in ART (the newer \&#xA;runtime), and even in Dalvik the property is ignored in many places and can not be relied upon. \&#xA;Instead, perform conditional checking inside `if (BuildConfig.DEBUG) { }` blocks. That constant \&#xA;is a static final boolean which is true in debug builds and false in release builds, and the \&#xA;Java compiler completely removes all code inside the if-body from the app.&#xA;&#xA;For example, you can replace `assert speed > 0` with `if (BuildConfig.DEBUG &amp;&amp; !(speed > 0)) { \&#xA;throw new AssertionError() }`.&#xA;&#xA;(Note: This lint check does not flag assertions purely asserting nullness or non-nullness; these \&#xA;are typically more intended for tools usage than runtime checks.)"
        url="https://code.google.com/p/android/issues/detail?id=65183"
        urls="https://code.google.com/p/android/issues/detail?id=65183"
        errorLine1="  assert(values.length == texts.length);"
        errorLine2="  ~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/preferences/ZLStringListPreference.java"
            line="36"
            column="3"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="     final String lcName = name.toLowerCase();"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/ui/android/view/AndroidFontUtil.java"
            line="73"
            column="33"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="  SortKey = sortKey.toLowerCase();"
        errorLine2="                    ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/kooreader/book/Author.java"
            line="36"
            column="21"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1=" private static final String ZERO_HASH = String.format(&quot;%040d&quot;, 0);"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/kooreader/book/BookCollection.java"
            line="48"
            column="42"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="   hash = uid.Id.toLowerCase();"
        errorLine2="                 ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/kooreader/book/BookCollection.java"
            line="847"
            column="18"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="  myTypes.put(type.Id.toLowerCase(), type);"
        errorLine2="                      ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/core/filetypes/FileTypeCollection.java"
            line="30"
            column="23"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="  return myTypes.get(id.toLowerCase());"
        errorLine2="                        ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/core/filetypes/FileTypeCollection.java"
            line="38"
            column="25"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="  final String extension = file.getExtension().toLowerCase();"
        errorLine2="                                               ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/core/filetypes/FileTypeHtml.java"
            line="34"
            column="48"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="   Pattern = pattern != null ? pattern.toLowerCase() : &quot;&quot;;"
        errorLine2="                                       ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/kooreader/book/Filter.java"
            line="77"
            column="40"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="    final String name = attributes.getValue(&quot;name&quot;).toLowerCase();"
        errorLine2="                                                    ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/core/encodings/FilteredEncodingCollection.java"
            line="78"
            column="53"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="     myEncodingByAlias.put(attributes.getValue(&quot;name&quot;).toLowerCase(), myCurrentEncoding);"
        errorLine2="                                                       ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/core/encodings/FilteredEncodingCollection.java"
            line="95"
            column="56"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="   mySortKey = Name.toLowerCase();"
        errorLine2="                    ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/core/language/Language.java"
            line="46"
            column="21"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="      (text.toLowerCase().indexOf(lowerCasePattern) >= 0);"
        errorLine2="            ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/core/util/MiscUtil.java"
            line="37"
            column="13"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="  if ((!a.toLowerCase().equals(a) || !b.toLowerCase().equals(b)) &amp;&amp; !a.equalsIgnoreCase(b)) {"
        errorLine2="          ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/kooreader/util/NaturalOrderComparator.java"
            line="63"
            column="11"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="   return compare(a.toLowerCase(), b.toLowerCase());"
        errorLine2="                    ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/kooreader/util/NaturalOrderComparator.java"
            line="64"
            column="21"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                        parts[2].toLowerCase().indexOf(&quot;fat&quot;) >= 0 &amp;&amp;"
        errorLine2="                                 ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/kooreader/Paths.java"
            line="110"
            column="34"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="            if (dir.toLowerCase().indexOf(&quot;media&quot;) > 0) {"
        errorLine2="                    ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/kooreader/Paths.java"
            line="127"
            column="21"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `String.format(Locale, ...)` instead"
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                    stringIndex = String.format(&quot;%.1f&quot;, index);"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/libraryService/SQLiteBooksDatabase.java"
            line="1596"
            column="35"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="   &quot;default/tapzones/&quot; + name.toLowerCase() + &quot;.xml&quot;"
        errorLine2="                              ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/kooreader/kooreader/TapZoneMap.java"
            line="109"
            column="31"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                country0 = country0.toLowerCase();"
        errorLine2="                                    ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/ui/android/library/ZLAndroidLibrary.java"
            line="160"
            column="37"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                country1 = country1.toLowerCase();"
        errorLine2="                                    ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/ui/android/library/ZLAndroidLibrary.java"
            line="164"
            column="37"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                final String country = locale.getCountry().toLowerCase();"
        errorLine2="                                                           ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/ui/android/library/ZLAndroidLibrary.java"
            line="167"
            column="60"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="        myExtension = (index > 0) ? name.substring(index + 1).toLowerCase().intern() : &quot;&quot;;"
        errorLine2="                                                              ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/core/filesystem/ZLFile.java"
            line="37"
            column="63"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="   LowerCasePattern = pattern.toLowerCase().toCharArray();"
        errorLine2="                              ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/core/util/ZLSearchPattern.java"
            line="12"
            column="31"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toUpperCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="   UpperCasePattern = pattern.toUpperCase().toCharArray();"
        errorLine2="                              ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/core/util/ZLSearchPattern.java"
            line="13"
            column="31"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                if (subfamily == null || !STYLES.contains(subfamily.toLowerCase())) {"
        errorLine2="                                                                    ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/core/util/ZLTTFInfoDetector.java"
            line="42"
            column="69"/>
    </issue>

    <issue
        id="DefaultLocale"
        severity="Warning"
        message="Implicitly using the default locale is a common source of bugs: Use `toLowerCase(Locale)` instead. For strings meant to be internal use `Locale.ROOT`, otherwise `Locale.getDefault()`."
        category="Correctness"
        priority="6"
        summary="Implied default locale in case conversion"
        explanation="Calling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user&apos;s device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.&#xA;&#xA;If you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.US)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead."
        url="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        urls="http://developer.android.com/reference/java/util/Locale.html#default_locale"
        errorLine1="                    final String lower = full.toLowerCase();"
        errorLine2="                                              ~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/core/util/ZLTTFInfoDetector.java"
            line="45"
            column="47"/>
    </issue>

    <issue
        id="InlinedApi"
        severity="Warning"
        message="Field requires API level 19 (current min is 17): `android.view.WindowManager.LayoutParams#FLAG_TRANSLUCENT_STATUS`"
        category="Correctness"
        priority="6"
        summary="Using inlined constants on older versions"
        explanation="This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that&apos;s fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and device whether it&apos;s safe and can be suppressed or whether the code needs tbe guarded.&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level."
        errorLine1="        getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/ninestars/DialogActivity.java"
            line="21"
            column="30"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="Call requires API level 19 (current min is 17): android.transition.Transition#setDuration"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="        getWindow().setEnterTransition(new Slide().setDuration(500));"
        errorLine2="                                                   ~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/ninestars/DialogActivity.java"
            line="22"
            column="52"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="Call requires API level 21 (current min is 17): android.view.Window#setEnterTransition"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="        getWindow().setEnterTransition(new Slide().setDuration(500));"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/ninestars/DialogActivity.java"
            line="22"
            column="21"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="Call requires API level 21 (current min is 17): new android.transition.Slide"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="        getWindow().setEnterTransition(new Slide().setDuration(500));"
        errorLine2="                                       ~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/ninestars/DialogActivity.java"
            line="22"
            column="40"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="Call requires API level 19 (current min is 17): android.transition.Transition#setDuration"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="        getWindow().setExitTransition(new Slide().setDuration(500));"
        errorLine2="                                                  ~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/ninestars/DialogActivity.java"
            line="23"
            column="51"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="Call requires API level 21 (current min is 17): android.view.Window#setExitTransition"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="        getWindow().setExitTransition(new Slide().setDuration(500));"
        errorLine2="                    ~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/ninestars/DialogActivity.java"
            line="23"
            column="21"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="Call requires API level 21 (current min is 17): new android.transition.Slide"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="        getWindow().setExitTransition(new Slide().setDuration(500));"
        errorLine2="                                      ~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/ninestars/DialogActivity.java"
            line="23"
            column="39"/>
    </issue>

    <issue
        id="NewApi"
        severity="Error"
        message="Call requires API level 21 (current min is 17): android.app.Activity#finishAfterTransition"
        category="Correctness"
        priority="6"
        summary="Calling new methods on older versions"
        explanation="This check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).&#xA;&#xA;If you really want to use this API and don&apos;t need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.&#xA;&#xA;If your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file&apos;s minimum SDK as the required API level.&#xA;&#xA;If you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.&#xA;&#xA;Similarly, you can use tools:targetApi=&quot;11&quot; in an XML file to indicate that the element will only be inflated in an adequate context."
        errorLine1="                finishAfterTransition();"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/ninestars/DialogActivity.java"
            line="37"
            column="17"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility &#xA;modes apply. Consider testing and updating this version. &#xA;Consult the android.os.Build.VERSION_CODES javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.&#xA;&#xA;To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        url="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        urls="http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        targetSdkVersion 26"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/build.gradle"
            line="13"
            column="9"/>
    </issue>

    <issue
        id="SdCardPath"
        severity="Warning"
        message="Do not hardcode &quot;`/data/`&quot;; use `Context.getFilesDir().getPath()` instead"
        category="Correctness"
        priority="6"
        summary="Hardcoded reference to `/sdcard`"
        explanation="Your code should not reference the `/sdcard` path directly; instead use \&#xA;`Environment.getExternalStorageDirectory().getPath()`.&#xA;&#xA;Similarly, do not reference the `/data/data/` path directly; it can vary in multi-user scenarios. \&#xA;Instead, use `Context.getFilesDir().getPath()`."
        url="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        urls="http://developer.android.com/guide/topics/data/data-storage.html#filesExternal"
        errorLine1="            pathOption(&quot;FontPathOption&quot;, &quot;/data/data/com.koolearn.klibrary.ui.android/files&quot;);"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/kooreader/Paths.java"
            line="27"
            column="42"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `elevation` is only used in API level 21 and higher (current min is 17)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="    android:elevation=&quot;5dp&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/include_toolbar.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="UnusedAttribute"
        severity="Warning"
        message="Attribute `elevation` is only used in API level 21 and higher (current min is 17)"
        category="Correctness"
        priority="6"
        summary="Attribute unused on older versions"
        explanation="This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).&#xA;&#xA;This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.&#xA;&#xA;Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `&lt;tag>` element in layouts introduced in API 21."
        errorLine1="        android:elevation=&quot;5dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/include_toolbar.xml"
            line="16"
            column="9"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="        view1 = mInflater.inflate(R.layout.item_listview, null);"
        errorLine2="                                                          ~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/TOCActivity.java"
            line="97"
            column="59"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="        view2 = mInflater.inflate(R.layout.list_bookmark, null);"
        errorLine2="                                                          ~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/TOCActivity.java"
            line="109"
            column="59"/>
    </issue>

    <issue
        id="InflateParams"
        severity="Warning"
        message="Avoid passing `null` as the view root (needed to resolve layout parameters on the inflated layout&apos;s root element)"
        category="Correctness"
        priority="5"
        summary="Layout Inflation without a Parent"
        explanation="When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored."
        url="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        urls="http://www.doubleencore.com/2013/05/layout-inflation-as-intended"
        errorLine1="        view3 = mInflater.inflate(R.layout.list_note, null);"
        errorLine2="                                                      ~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/TOCActivity.java"
            line="127"
            column="55"/>
    </issue>

    <issue
        id="AppCompatCustomView"
        severity="Error"
        message="This custom view should extend `android.support.v7.widget.AppCompatButton` instead"
        category="Correctness"
        priority="4"
        summary="Appcompat Custom Widgets"
        explanation="In order to support features such as tinting, the appcompat library will automatically load special appcompat replacements for the builtin widgets. However, this does not work for your own custom views.&#xA;&#xA;Instead of extending the `android.widget` classes directly, you should instead extend one of the delegate classes in `android.support.v7.widget.AppCompat`."
        errorLine1="public class FlatButton extends Button {"
        errorLine2="                                ~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/view/FlatButton.java"
            line="16"
            column="33"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of de.hdodenhof:circleimageview than 1.3.0 is available: 2.0.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;de.hdodenhof:circleimageview:1.3.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/build.gradle"
            line="73"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of org.greenrobot:eventbus than 3.0.0 is available: 3.1.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation &apos;org.greenrobot:eventbus:3.0.0&apos;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/build.gradle"
            line="88"
            column="5"/>
    </issue>

    <issue
        id="ParcelClassLoader"
        severity="Warning"
        message="Passing null here (to use the default class loader) will not work if you are restoring your own classes. Consider using for example `getClass().getClassLoader()` instead."
        category="Correctness"
        priority="3"
        summary="Default Parcel Class Loader"
        explanation="The documentation for `Parcel#readParcelable(ClassLoader)` (and its variations) says that you can pass in `null` to pick up the default class loader. However, that ClassLoader is a system class loader and is not able to find classes in your own application.&#xA;&#xA;If you are writing your own classes into the `Parcel` (not just SDK classes like `String` and so on), then you should supply a `ClassLoader` for your application instead; a simple way to obtain one is to just call `getClass().getClassLoader()` from your own class."
        url="http://developer.android.com/reference/android/os/Parcel.html"
        urls="http://developer.android.com/reference/android/os/Parcel.html"
        errorLine1="      return new Parcelable(parcel.readParcelable(null));"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/api/ApiObject.java"
            line="297"
            column="36"/>
    </issue>

    <issue
        id="SpUsage"
        severity="Warning"
        message="Should use &quot;`sp`&quot; instead of &quot;`dp`&quot; for text sizes"
        category="Correctness"
        priority="3"
        summary="Using `dp` instead of `sp` for text sizes"
        explanation="When setting text sizes, you should normally use `sp`, or &quot;scale-independent pixels&quot;. This is like the `dp` unit, but it is also scaled by the user&apos;s font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user&apos;s preference.&#xA;&#xA;There **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user&apos;s font size settings are not respected, so consider adjusting the layout itself to be more flexible."
        url="http://developer.android.com/training/multiscreen/screendensities.html"
        urls="http://developer.android.com/training/multiscreen/screendensities.html"
        errorLine1="        android:textSize=&quot;20dp&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bug_report_view.xml"
            line="13"
            column="9"/>
    </issue>

    <issue
        id="ExportedPreferenceActivity"
        severity="Warning"
        message="`PreferenceActivity` subclass `com.koolearn.android.kooreader.preferences.PreferenceActivity` should not be exported"
        category="Security"
        priority="8"
        summary="PreferenceActivity should not be exported"
        explanation="Fragment injection gives anyone who can send your PreferenceActivity an intent the ability to load any fragment, with any arguments, in your process."
        url="http://securityintelligence.com/new-vulnerability-android-framework-fragment-injection"
        urls="http://securityintelligence.com/new-vulnerability-android-framework-fragment-injection"
        errorLine1="        &lt;activity"
        errorLine2="        ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/AndroidManifest.xml"
            line="147"
            column="9"/>
    </issue>

    <issue
        id="ExportedPreferenceActivity"
        severity="Warning"
        message="`PreferenceActivity` subclass `com.koolearn.android.kooreader.bookmark.EditStyleActivity` should not be exported"
        category="Security"
        priority="8"
        summary="PreferenceActivity should not be exported"
        explanation="Fragment injection gives anyone who can send your PreferenceActivity an intent the ability to load any fragment, with any arguments, in your process."
        url="http://securityintelligence.com/new-vulnerability-android-framework-fragment-injection"
        urls="http://securityintelligence.com/new-vulnerability-android-framework-fragment-injection"
        errorLine1="        &lt;activity"
        errorLine2="        ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/AndroidManifest.xml"
            line="189"
            column="9"/>
    </issue>

    <issue
        id="WrongConstant"
        severity="Error"
        message="Flag not allowed here"
        category="Security"
        priority="6"
        summary="Incorrect constant"
        explanation="Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules."
        errorLine1="  final int style = (bold ? Typeface.BOLD : 0) | (italic ? Typeface.ITALIC : 0);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/ui/android/view/AndroidFontUtil.java"
            line="171"
            column="21"/>
    </issue>

    <issue
        id="ExportedService"
        severity="Warning"
        message="Exported service does not require permission"
        category="Security"
        priority="5"
        summary="Exported service does not require permission"
        explanation="Exported services (services which either set `exported=true` or contain an intent-filter and do not specify `exported=false`) should define a permission that an entity must have in order to launch the service or bind to it. Without this, any application can use this service."
        errorLine1="        &lt;service"
        errorLine2="        ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/AndroidManifest.xml"
            line="208"
            column="9"/>
    </issue>

    <issue
        id="WakelockTimeout"
        severity="Warning"
        message="Provide a timeout when requesting a wakelock with `PowerManager.Wakelock.acquire(long timeout)`. This will ensure the OS will cleanup any wakelocks that last longer than you intend, and will save your user&apos;s battery."
        category="Performance"
        priority="9"
        summary="Using wakeLock without timeout"
        explanation="Wakelocks have two acquire methods: one with a timeout, and one without. You should generally always use the one with a timeout. A typical timeout is 10 minutes. If the task takes longer than it is critical that it happens (i.e. can&apos;t use `JobScheduler`) then maybe they should consider a foreground service instead (which is a stronger run guarantee and lets the user know something long/important is happening.)"
        errorLine1="                    myWakeLock.acquire();"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/KooReader.java"
            line="437"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_below`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="        android:layout_below=&quot;@id/rl_shelf&quot; />"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/listview_localbook.xml"
            line="26"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_below`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="        android:layout_below=&quot;@id/rl_shelf&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/listview_localbook.xml"
            line="32"
            column="9"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentLeft`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="179"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_toRightOf`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_toRightOf=&quot;@+id/btn_page_simulation&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="190"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_toRightOf`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_toRightOf=&quot;@+id/btn_page_cover&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="201"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteLayoutParam"
        severity="Warning"
        message="Invalid layout param in a `LinearLayout`: `layout_alignParentRight`"
        category="Performance"
        priority="6"
        summary="Obsolete layout params"
        explanation="The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed."
        errorLine1="                android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="211"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/view/FlatButton.java"
            line="140"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD) {"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/core/language/Language.java"
            line="43"
            column="7"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/MainMenuWindow.java"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/MainMenuWindow.java"
            line="25"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/MainMenuWindow.java"
            line="32"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/MainMenuWindow.java"
            line="70"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/MainMenuWindow.java"
            line="100"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/NavigationWindow.java"
            line="14"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/NavigationWindow.java"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/NavigationWindow.java"
            line="28"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/NavigationWindow.java"
            line="66"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/NavigationWindow.java"
            line="96"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.FROYO) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/kooreader/Paths.java"
            line="31"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="  if (Build.VERSION.SDK_INT >= 8) {"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/kooreader/formats/PluginCollection.java"
            line="70"
            column="7"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/ProgressWindow.java"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/ProgressWindow.java"
            line="25"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/ProgressWindow.java"
            line="32"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/ProgressWindow.java"
            line="70"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/ProgressWindow.java"
            line="100"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/SettingWindow.java"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/SettingWindow.java"
            line="25"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/SettingWindow.java"
            line="32"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/SettingWindow.java"
            line="70"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/SettingWindow.java"
            line="100"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD) {"
        errorLine2="      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/kooreader/sort/TitledEntity.java"
            line="114"
            column="7"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 17"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/ui/android/library/ZLAndroidLibrary.java"
            line="187"
            column="16"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="Do not place Android context classes in static fields; this is a memory leak (and also breaks Instant Run)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="    static Activity myActivity;"
        errorLine2="    ~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/OpenPhotoAction.java"
            line="25"
            column="5"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="Do not place Android context classes in static fields; this is a memory leak (and also breaks Instant Run)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="    static ViewGroup mContainer;"
        errorLine2="    ~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/OpenPhotoAction.java"
            line="26"
            column="5"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="Do not place Android context classes in static fields; this is a memory leak (and also breaks Instant Run)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="    private static RelativeLayout relativeLayout;"
        errorLine2="            ~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/OpenPhotoAction.java"
            line="29"
            column="13"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="Do not place Android context classes in static fields; this is a memory leak (and also breaks Instant Run)"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="    static private Context context;"
        errorLine2="    ~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/ui/android/library/ZLAndroidApplication.java"
            line="15"
            column="5"/>
    </issue>

    <issue
        id="UseCompoundDrawables"
        severity="Warning"
        message="This tag and its children can be replaced by one `&lt;TextView/>` and a compound drawable"
        category="Performance"
        priority="6"
        summary="Node can be replaced by a `TextView` with compound drawables"
        explanation="A `LinearLayout` which contains an `ImageView` and a `TextView` can be more efficiently handled as a compound drawable (a single TextView, using the `drawableTop`, `drawableLeft`, `drawableRight` and/or `drawableBottom` attributes to draw one or more images adjacent to the text).&#xA;&#xA;If the two widgets are offset from each other with margins, this can be replaced with a `drawablePadding` attribute.&#xA;&#xA;There&apos;s a lint quickfix to perform this conversion in the Eclipse plugin."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/library_tree_item.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="HandlerLeak"
        severity="Warning"
        message="This Handler class should be static or leaks might occur (anonymous android.os.Handler)"
        category="Performance"
        priority="4"
        summary="Handler reference leaks"
        explanation="Since this Handler is declared as an inner class, it may prevent the outer class from being garbage collected. If the Handler is using a Looper or MessageQueue for a thread other than the main thread, then there is no issue. If the Handler is using the Looper or MessageQueue of the main thread, you need to fix your Handler declaration, as follows: Declare the Handler as a static class; In the outer class, instantiate a WeakReference to the outer class and pass this object to your Handler when you instantiate the Handler; Make all references to members of the outer class using the WeakReference object."
        errorLine1="            ourProgressHandler = new Handler() {"
        errorLine2="                                 ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/util/UIUtil.java"
            line="30"
            column="34"/>
    </issue>

    <issue
        id="HandlerLeak"
        severity="Warning"
        message="This Handler class should be static or leaks might occur (com.koolearn.klibrary.ui.android.image.ZLAndroidImageLoader.ImageSynchronizedHandler)"
        category="Performance"
        priority="4"
        summary="Handler reference leaks"
        explanation="Since this Handler is declared as an inner class, it may prevent the outer class from being garbage collected. If the Handler is using a Looper or MessageQueue for a thread other than the main thread, then there is no issue. If the Handler is using the Looper or MessageQueue of the main thread, you need to fix your Handler declaration, as follows: Declare the Handler as a static class; In the outer class, instantiate a WeakReference to the outer class and pass this object to your Handler when you instantiate the Handler; Make all references to members of the outer class using the WeakReference object."
        errorLine1=" private class ImageSynchronizedHandler extends Handler {"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/ui/android/image/ZLAndroidImageLoader.java"
            line="63"
            column="16"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new LongSparseArray(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="  Collections.synchronizedMap(new HashMap&lt;Long,DbBook>());"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/kooreader/book/BookCollection.java"
            line="59"
            column="31"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new LongSparseArray(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="    private final HashMap&lt;Long, FileInfo> myInfosById = new HashMap&lt;Long, FileInfo>();"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/kooreader/book/FileInfoSet.java"
            line="39"
            column="57"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new LongSparseArray(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="    private final HashMap&lt;Long, Tag> myTagById = new HashMap&lt;Long, Tag>();"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/libraryService/SQLiteBooksDatabase.java"
            line="234"
            column="50"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new LongSparseArray(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="        final HashMap&lt;Long, DbBook> booksById = new HashMap&lt;Long, DbBook>();"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/libraryService/SQLiteBooksDatabase.java"
            line="259"
            column="49"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new LongSparseArray(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="        final HashMap&lt;Long, DbBook> booksByFileId = new HashMap&lt;Long, DbBook>();"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/libraryService/SQLiteBooksDatabase.java"
            line="260"
            column="53"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new LongSparseArray(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="        final HashMap&lt;Long, Author> authorById = new HashMap&lt;Long, Author>();"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/libraryService/SQLiteBooksDatabase.java"
            line="279"
            column="50"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new LongSparseArray(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="        final HashMap&lt;Long, String> seriesById = new HashMap&lt;Long, String>();"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/libraryService/SQLiteBooksDatabase.java"
            line="311"
            column="50"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new LongSparseArray(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="        HashMap&lt;Long, FileInfo> infosById = new HashMap&lt;Long, FileInfo>();"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/libraryService/SQLiteBooksDatabase.java"
            line="743"
            column="45"/>
    </issue>

    <issue
        id="UseSparseArrays"
        severity="Warning"
        message="Use `new SparseArray&lt;HighlightingStyle>(...)` instead for better performance"
        category="Performance"
        priority="4"
        summary="HashMap can be replaced with SparseArray"
        explanation="For maps where the keys are of type integer, it&apos;s typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.&#xA;&#xA;This is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.&#xA;&#xA;If you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation."
        errorLine1="            Collections.synchronizedMap(new HashMap&lt;Integer, HighlightingStyle>());"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/TOCActivity.java"
            line="73"
            column="41"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `fill_parent` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="  android:layout_width=&quot;fill_parent&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/color_preference.xml"
            line="29"
            column="3"/>
    </issue>

    <issue
        id="InefficientWeight"
        severity="Warning"
        message="Use a `layout_width` of `0dp` instead of `fill_parent` for better performance"
        category="Performance"
        priority="3"
        summary="Inefficient layout weight"
        explanation="When only a single widget in a LinearLayout defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first."
        errorLine1="  android:layout_width=&quot;fill_parent&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/style_item.xml"
            line="38"
            column="3"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@drawable/paper` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@drawable/paper&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bug_report_view.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/white` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@color/white&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/item_listview.xml"
            line="5"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@android:color/background_light` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@android:color/background_light&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/layout_hd_dialog_custom_tv.xml"
            line="6"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/white` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@color/white&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/listview_toc.xml"
            line="6"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/window_background` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@color/window_background&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/mainmenu.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/white` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@color/white&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/navigation_panel.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/white` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@color/white&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/progress.xml"
            line="6"
            column="5"/>
    </issue>

    <issue
        id="Overdraw"
        severity="Warning"
        message="Possible overdraw: Root element paints background `@color/white` with a theme that also paints a background (inferred theme is `@style/AppTheme`)"
        category="Performance"
        priority="3"
        summary="Overdraw: Painting regions more than once"
        explanation="If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called &quot;overdraw&quot;.&#xA;&#xA;NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it&apos;s currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.&#xA;&#xA;If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.&#xA;&#xA;Of course it&apos;s possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead."
        errorLine1="    android:background=&quot;@color/white&quot;"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.aboutuser` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/aboutuser.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.menu.activity_main_drawer` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/menu/activity_main_drawer.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.activity_photoview` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/activity_photoview.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.mipmap.alertdialog` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xxhdpi/alertdialog.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.array.url` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;array name=&quot;url&quot;>"
        errorLine2="           ~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/arrays.xml"
            line="4"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.mipmap.back` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-hdpi/back.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xhdpi/back.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xxhdpi/back.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.raw.beep` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/raw/beep.ogg"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.bf_footer` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi/bf_footer.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.bg_night` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi/bg_night.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.book_pre` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi/book_pre.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.book_shadow` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi/book_shadow.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.bookmarks` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;TabHost xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bookmarks.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.btn_back_normal` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-hdpi/btn_back_normal.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.btn_back_press` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-hdpi/btn_back_press.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.scan_date_year` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;scan_date_year&quot;>#464545&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="6"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.scan_date_day` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;scan_date_day&quot;>#4C4B4B&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="7"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.gray` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;gray&quot;>#a3a3a3&lt;/color>"
        errorLine2="         ~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="9"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.gray_test` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;gray_test&quot;>#cecece&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="10"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.sacn_color` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;sacn_color&quot;>#FEF10D&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="11"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.contents_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;contents_text&quot;>#ff000000&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="12"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.encode_view` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;encode_view&quot;>#ffffffff&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="13"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.possible_result_points` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;possible_result_points&quot;>#c0ffbd21&lt;/color> &lt;!-- Android standard ICS color -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="14"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.result_minor_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;result_minor_text&quot;>#ffc0c0c0&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="15"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.result_points` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;result_points&quot;>#c099cc00&lt;/color> &lt;!-- Android standard ICS color -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="16"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.result_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;result_text&quot;>#ffffffff&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="17"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.result_view` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;result_view&quot;>#b0000000&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="18"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.status_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;status_text&quot;>#ffffffff&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="19"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.transparent` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;transparent&quot;>#00000000&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="20"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.viewfinder_laser` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;viewfinder_laser&quot;>#ffcc0000&lt;/color> &lt;!-- Android standard ICS color -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="21"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.viewfinder_mask` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;viewfinder_mask&quot;>#60000000&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="22"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.tab` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;tab&quot;>#cacaca&lt;/color>"
        errorLine2="         ~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="24"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.dialog_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;dialog_text&quot;>#fb9e01&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="25"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.bookself_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;bookself_text&quot;>#5d5d5d&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="26"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.hot_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;hot_title&quot;>#9a99ff&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="28"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.hot_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;hot_text&quot;>#5e5d5d&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="29"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.view_gray` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;view_gray&quot;>#f2f2f2&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="30"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.transparent_background` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;transparent_background&quot;>#50000000&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="31"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.bookname` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;bookname&quot;>#5e5d5d&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="32"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.bookAuthor` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;bookAuthor&quot;>#727272&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="33"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.colorPrimaryLight` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;colorPrimaryLight&quot;>#c5cae9&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="38"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.progressBarBg` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;progressBarBg&quot;>#FFFFFF&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="40"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.progressBara` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;progressBara&quot;>#3F51B5&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="41"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.progressBarb` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;progressBarb&quot;>#303F9F&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="42"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.primarys1` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;primarys1&quot;>#009688&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="57"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.primarys_dark1` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;primarys_dark1&quot;>#00897b&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="58"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.primary_light1` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;primary_light1&quot;>#B2DFDB&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="59"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.accent1` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;accent1&quot;>#ffb74d&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="60"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.fontColor` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;fontColor&quot;>#532d17&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="62"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.primary_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;primary_text&quot;>#212121&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="64"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.secondary_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;secondary_text&quot;>#727272&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="65"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.icons` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;icons&quot;>#FFFFFF&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="66"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.divider` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;divider&quot;>#B6B6B6&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="67"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.tab_bgcolor` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;tab_bgcolor&quot;>#eeeeee&lt;/color>"
        errorLine2="         ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="70"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.status_blue` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;status_blue&quot;>#2a36b1&lt;/color>        &lt;!-- 900 -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="72"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.navigation_blue` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;navigation_blue&quot;>#455ede&lt;/color>    &lt;!-- 700 -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="73"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.action_blue` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;action_blue&quot;>#5677fc&lt;/color>        &lt;!-- 500 -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="74"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.bg_blue` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;bg_blue&quot;>#738ffe&lt;/color>    &lt;!-- 400 -->"
        errorLine2="         ~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="75"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.window_bg_blue` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;window_bg_blue&quot;>#91a7ff&lt;/color>     &lt;!-- 300 -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="76"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.fg_blue` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;fg_blue&quot;>#e7e9fd&lt;/color>    &lt;!-- 50 -->"
        errorLine2="         ~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="77"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.control_activated_blue` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;control_activated_blue&quot;>#4d69ff&lt;/color>    &lt;!-- A700 -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="78"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.control_highlight_blue` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;control_highlight_blue&quot;>#afbfff&lt;/color>    &lt;!-- 200 -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="79"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.control_normal_blue` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;control_normal_blue&quot;>#e7e9fd&lt;/color>    &lt;!-- 50 -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="80"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.color.button_normal_blue` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="  &lt;color name=&quot;button_normal_blue&quot;>#738ffe&lt;/color> &lt;!-- 400 -->"
        errorLine2="         ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/colors.xml"
            line="81"
            column="10"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.corners_bg` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/corners_bg.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.default_builder_dialog_bg` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; >"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/default_builder_dialog_bg.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.default_builder_dialog_btn_bg` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/default_builder_dialog_btn_bg.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.scan_date_day` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;scan_date_day&quot;>19sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="5"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.scan_date_year` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;scan_date_year&quot;>11sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="6"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.scan_name` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;scan_name&quot;>15sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="7"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.scan_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;scan_title&quot;>12sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="8"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.style_one_textSize` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;style_one_textSize&quot;>9sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="9"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.style_two_textSize` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;style_two_textSize&quot;>8sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="10"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.selection_textSize` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;selection_textSize&quot;>15sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="11"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.selection_changeSize` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;selection_changeSize&quot;>12sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="12"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.selection_bookTextSize` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;selection_bookTextSize&quot;>12sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="13"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.selection_bookAutherTextSize` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;selection_bookAutherTextSize&quot;>11sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="14"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.login_forgetpassword_textSize` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;login_forgetpassword_textSize&quot;>13sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="15"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.set_title_textSize` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;set_title_textSize&quot;>17sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="16"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.set_textSize` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;set_textSize&quot;>15sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="17"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.menu_textSize` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;menu_textSize&quot;>15sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="18"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.selection_text` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;selection_text&quot;>15sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.user_size` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;user_size&quot;>16sp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="20"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.scan_left` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;scan_left&quot;>27dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="23"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.scan_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;scan_top&quot;>25dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="24"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.set_left` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;set_left&quot;>24dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="25"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.set_right` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;set_right&quot;>22dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="26"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.set_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;set_top&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="27"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.set_bottom` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;set_bottom&quot;>7dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="28"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.activity_horizontal_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;activity_horizontal_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="29"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.activity_vertical_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;activity_vertical_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="30"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.card_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;card_margin&quot;>5dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="31"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.btn_fab_size` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;btn_fab_size&quot;>56dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="32"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.btn_fab_margin` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;btn_fab_margin&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="33"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;top&quot;>7dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="38"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.bottom` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;bottom&quot;>7dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="39"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.selection_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;selection_top&quot;>17dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="40"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.title_bottom` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;title_bottom&quot;>12dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="41"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.selection_moreTop` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;selection_moreTop&quot;>13dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="42"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.more_bottom` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;more_bottom&quot;>13dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="43"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.shadow_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;shadow_width&quot;>5dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="44"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.slidingmenu_offset` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;slidingmenu_offset&quot;>82dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="45"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.login_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;login_top&quot;>218dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="46"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.login_left` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;login_left&quot;>52dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="47"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.login_right` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;login_right&quot;>52dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="48"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.login_phone_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;login_phone_top&quot;>10dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="49"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.login_phone_left` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;login_phone_left&quot;>18dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="50"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.login_samll_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;login_samll_top&quot;>12dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="51"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.login_button_width` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;login_button_width&quot;>208dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="52"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.login_button_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;login_button_height&quot;>46dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="53"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.menu_left` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;menu_left&quot;>16dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.menu_right` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;menu_right&quot;>17dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="55"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.menu_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;menu_height&quot;>51dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="56"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.menu_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;menu_top&quot;>31dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="57"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.menu_logout_bottom` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;menu_logout_bottom&quot;>87dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="58"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.menu_button_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;menu_button_height&quot;>35dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="59"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.bookself_show_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;bookself_show_height&quot;>200dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="60"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.bookself_title_height` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;bookself_title_height&quot;>35dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="61"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.bookself_left` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;bookself_left&quot;>44dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="62"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.selectionHot_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;selectionHot_top&quot;>13dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="63"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.selectionHot_left` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;selectionHot_left&quot;>23dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="64"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.selectionHot_right` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;selectionHot_right&quot;>23dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="65"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.selectionHotsearch_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;selectionHotsearch_top&quot;>19dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="66"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.selectionHistory_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;selectionHistory_top&quot;>33dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="67"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.selectionHistoryRecycle_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;selectionHistoryRecycle_top&quot;>17dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="68"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.dimen.bookself_top` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;dimen name=&quot;bookself_top&quot;>13dp&lt;/dimen>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/dimens.xml"
            line="69"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.divider` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/divider.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_local_book` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;item name=&quot;ic_local_book&quot; type=&quot;drawable&quot;>@drawable/ic_local_book&lt;/item>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/drawables..xml"
            line="2"
            column="11"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_net_book` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;item name=&quot;ic_net_book&quot; type=&quot;drawable&quot;>@drawable/ic_net_book&lt;/item>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/drawables..xml"
            line="3"
            column="11"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_booknote` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;item name=&quot;ic_booknote&quot; type=&quot;drawable&quot;>@drawable/ic_booknote&lt;/item>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/drawables..xml"
            line="4"
            column="11"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_bookmark` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;item name=&quot;ic_bookmark&quot; type=&quot;drawable&quot;>@drawable/ic_bookmark&lt;/item>"
        errorLine2="          ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/drawables..xml"
            line="5"
            column="11"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.fangzhen` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/fangzhen.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.fugai` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/fugai.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.mipmap.grade` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-hdpi/grade.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.mipmap.guanggao` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xxhdpi/guanggao.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.huadong` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/huadong.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_close_large_pressed` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi/ic_close_large_pressed.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_close_large_white` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi/ic_close_large_white.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.ic_list_plus` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi/ic_list_plus.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.include_toolbar` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;android.support.design.widget.AppBarLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/include_toolbar.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.layout_hd_builder_dialog` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;RelativeLayout"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/layout_hd_builder_dialog.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.layout_hd_dialog_custom_tv` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;TextView"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/layout_hd_dialog_custom_tv.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.light` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi/light.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.light_shadow` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi/light_shadow.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.light_small` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi/light_small.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.lights` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/lights.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.mipmap.line` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xhdpi/line.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.link_default` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/link_default.9.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.list_bookmarks` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/list_bookmarks.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.loading_animation` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/anim/loading_animation.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.menu.main` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/menu/main.xml"
            line="1"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.mipmap.mulufengexian` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-hdpi/mulufengexian.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xhdpi/mulufengexian.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xxhdpi/mulufengexian.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.never` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/never.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.page_redline` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi/page_redline.9.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.page_whiteline` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi/page_whiteline.9.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.page_whitelinedark` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi/page_whitelinedark.9.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.popup_close_large` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/popup_close_large.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.mipmap.recentlyreader` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xhdpi/recentlyreader.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.selector_main_button` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/selector_main_button.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.mipmap.separator` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xhdpi/separator.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.mipmap.set` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-hdpi/set.png"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.shadow` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; >"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/shadow.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.shape_main_button` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/shape_main_button.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.shape_main_edit` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/shape_main_edit.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.shape_main_imageview` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; >"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/shape_main_imageview.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.shape_main_title` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/shape_main_title.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.slde_nav_bar` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;shape xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/slde_nav_bar.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.layout.style_item` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/style_item.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.loading_dialog` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;style name=&quot;loading_dialog&quot; parent=&quot;android:style/Theme.Dialog&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/styles.xml"
            line="5"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.SwitchButtonStyle` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;style name=&quot;SwitchButtonStyle&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/styles.xml"
            line="19"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.recycle` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;style name=&quot;recycle&quot; parent=&quot;AppTheme.NoActionBar&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/styles.xml"
            line="25"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.AppTheme_NoActionBar` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;style name=&quot;AppTheme.NoActionBar&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/styles.xml"
            line="32"
            column="12"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values-v21/styles.xml"
            line="3"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.AppTheme_AppBarOverlay` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;style name=&quot;AppTheme.AppBarOverlay&quot; parent=&quot;ThemeOverlay.AppCompat.Dark.ActionBar&quot; />"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/styles.xml"
            line="37"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.AppTheme_PopupOverlay` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;style name=&quot;AppTheme.PopupOverlay&quot; parent=&quot;ThemeOverlay.AppCompat.Light&quot; />"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/styles.xml"
            line="39"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.CardView_Content` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;style name=&quot;CardView.Content&quot; parent=&quot;android:Widget&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/styles.xml"
            line="41"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.Transparent` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;style name=&quot;Transparent&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/styles.xml"
            line="75"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.hd_dialog` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;style name=&quot;hd_dialog&quot; parent=&quot;android:style/Theme.Dialog&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/styles.xml"
            line="85"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.hd_dialog_dim` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;style name=&quot;hd_dialog_dim&quot; parent=&quot;hd_dialog&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/styles.xml"
            line="96"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.Dialog` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;style name=&quot;Dialog&quot; parent=&quot;android:style/Theme.Dialog&quot;>"
        errorLine2="           ~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/styles.xml"
            line="99"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.style.AppSplash` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;style name=&quot;AppSplash&quot; parent=&quot;android:Theme&quot;>"
        errorLine2="           ~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/styles.xml"
            line="105"
            column="12"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.drawable.textviewline` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/textviewline.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.tran_fade_in_long` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;alpha xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/anim/tran_fade_in_long.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.tran_fade_out_long` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;alpha xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/anim/tran_fade_out_long.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.tran_previous_in` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;translate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/anim/tran_previous_in.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.tran_previous_out` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;translate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/anim/tran_previous_out.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.string.transition_book_img` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="    &lt;string name=&quot;transition_book_img&quot;>transition_book_img&lt;/string>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/values/transition.xml"
            line="3"
            column="13"/>
    </issue>

    <issue
        id="UnusedResources"
        severity="Warning"
        message="The resource `R.anim.translate_in` appears to be unused"
        category="Performance"
        priority="3"
        summary="Unused resources"
        explanation="Unused resources make applications larger and slow down builds."
        errorLine1="&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;>"
        errorLine2="^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/anim/translate_in.xml"
            line="2"
            column="1"/>
    </issue>

    <issue
        id="UselessLeaf"
        severity="Warning"
        message="This `FrameLayout` view is useless (no children, no `background`, no `id`, no `style`)"
        category="Performance"
        priority="2"
        summary="Useless leaf layout"
        explanation="A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;FrameLayout"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/listview_localbook.xml"
            line="23"
            column="5"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `LinearLayout` parent is useless"
        category="Performance"
        priority="2"
        summary="Useless parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;LinearLayout"
        errorLine2="    ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bookmark_item.xml"
            line="10"
            column="5"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `RelativeLayout` layout or its `LinearLayout` parent is possibly useless"
        category="Performance"
        priority="2"
        summary="Useless parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;RelativeLayout"
        errorLine2="    ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="9"
            column="5"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `LinearLayout` layout or its `RelativeLayout` parent is possibly useless; transfer the `background` attribute to the other view"
        category="Performance"
        priority="2"
        summary="Useless parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;LinearLayout"
        errorLine2="    ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/layout_hd_builder_dialog.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `FrameLayout` layout or its `LinearLayout` parent is useless"
        category="Performance"
        priority="2"
        summary="Useless parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;FrameLayout"
        errorLine2="    ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/list_bookmarks.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="UselessParent"
        severity="Warning"
        message="This `RelativeLayout` layout or its `RelativeLayout` parent is useless"
        category="Performance"
        priority="2"
        summary="Useless parent layout"
        explanation="A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy."
        errorLine1="    &lt;RelativeLayout"
        errorLine2="    ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/list_note.xml"
            line="8"
            column="5"/>
    </issue>

    <issue
        id="IconXmlAndPng"
        severity="Warning"
        message="The following images appear both as density independent `.xml` files and as bitmap files: src/main/res/drawable/a_down.xml, src/main/res/mipmap-hdpi/a_down.png"
        category="Usability:Icons"
        priority="7"
        summary="Icon is specified both as `.xml` file and as a bitmap"
        explanation="If a drawable resource appears as an `.xml` file in the `drawable/` folder, it&apos;s usually not intentional for it to also appear as a bitmap using the same name; generally you expect the drawable XML file to define states and each state has a corresponding drawable bitmap.">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xhdpi/a_down.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-hdpi/a_down.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/a_down.xml"/>
    </issue>

    <issue
        id="IconXmlAndPng"
        severity="Warning"
        message="The following images appear both as density independent `.xml` files and as bitmap files: src/main/res/drawable/a_up.xml, src/main/res/mipmap-hdpi/a_up.png"
        category="Usability:Icons"
        priority="7"
        summary="Icon is specified both as `.xml` file and as a bitmap"
        explanation="If a drawable resource appears as an `.xml` file in the `drawable/` folder, it&apos;s usually not intentional for it to also appear as a bitmap using the same name; generally you expect the drawable XML file to define states and each state has a corresponding drawable bitmap.">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xhdpi/a_up.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-hdpi/a_up.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/a_up.xml"/>
    </issue>

    <issue
        id="IconXmlAndPng"
        severity="Warning"
        message="The following images appear both as density independent `.xml` files and as bitmap files: src/main/res/drawable/fangzhen.xml, src/main/res/mipmap-hdpi/fangzhen.png"
        category="Usability:Icons"
        priority="7"
        summary="Icon is specified both as `.xml` file and as a bitmap"
        explanation="If a drawable resource appears as an `.xml` file in the `drawable/` folder, it&apos;s usually not intentional for it to also appear as a bitmap using the same name; generally you expect the drawable XML file to define states and each state has a corresponding drawable bitmap.">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xxhdpi/fangzhen.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xhdpi/fangzhen.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-hdpi/fangzhen.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/fangzhen.xml"/>
    </issue>

    <issue
        id="IconXmlAndPng"
        severity="Warning"
        message="The following images appear both as density independent `.xml` files and as bitmap files: src/main/res/drawable/fugai.xml, src/main/res/mipmap-hdpi/fugai.png"
        category="Usability:Icons"
        priority="7"
        summary="Icon is specified both as `.xml` file and as a bitmap"
        explanation="If a drawable resource appears as an `.xml` file in the `drawable/` folder, it&apos;s usually not intentional for it to also appear as a bitmap using the same name; generally you expect the drawable XML file to define states and each state has a corresponding drawable bitmap.">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xxhdpi/fugai.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xhdpi/fugai.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-hdpi/fugai.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/fugai.xml"/>
    </issue>

    <issue
        id="IconXmlAndPng"
        severity="Warning"
        message="The following images appear both as density independent `.xml` files and as bitmap files: src/main/res/drawable/huadong.xml, src/main/res/mipmap-hdpi/huadong.png"
        category="Usability:Icons"
        priority="7"
        summary="Icon is specified both as `.xml` file and as a bitmap"
        explanation="If a drawable resource appears as an `.xml` file in the `drawable/` folder, it&apos;s usually not intentional for it to also appear as a bitmap using the same name; generally you expect the drawable XML file to define states and each state has a corresponding drawable bitmap.">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xxhdpi/huadong.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xhdpi/huadong.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-hdpi/huadong.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/huadong.xml"/>
    </issue>

    <issue
        id="IconXmlAndPng"
        severity="Warning"
        message="The following images appear both as density independent `.xml` files and as bitmap files: src/main/res/drawable/never.xml, src/main/res/mipmap-hdpi/never.png"
        category="Usability:Icons"
        priority="7"
        summary="Icon is specified both as `.xml` file and as a bitmap"
        explanation="If a drawable resource appears as an `.xml` file in the `drawable/` folder, it&apos;s usually not intentional for it to also appear as a bitmap using the same name; generally you expect the drawable XML file to define states and each state has a corresponding drawable bitmap.">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xxhdpi/never.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xhdpi/never.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-hdpi/never.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/never.xml"/>
    </issue>

    <issue
        id="IconXmlAndPng"
        severity="Warning"
        message="The following images appear both as density independent `.xml` files and as bitmap files: src/main/res/drawable/night.xml, src/main/res/mipmap-hdpi/night.png"
        category="Usability:Icons"
        priority="7"
        summary="Icon is specified both as `.xml` file and as a bitmap"
        explanation="If a drawable resource appears as an `.xml` file in the `drawable/` folder, it&apos;s usually not intentional for it to also appear as a bitmap using the same name; generally you expect the drawable XML file to define states and each state has a corresponding drawable bitmap.">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-hdpi/night.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/night.xml"/>
    </issue>

    <issue
        id="IconDipSize"
        severity="Warning"
        message="The image `mulufengexian.png` varies significantly in its density-independent (dip) size across the various density versions: mipmap-hdpi/mulufengexian.png: 330x1 dp (495x1 px), mipmap-xhdpi/mulufengexian.png: 330x1 dp (659x1 px), mipmap-xxhdpi/mulufengexian.png: 330x0 dp (989x1 px)"
        category="Usability:Icons"
        priority="5"
        summary="Icon density-independent size validation"
        explanation="Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xxhdpi/mulufengexian.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-xhdpi/mulufengexian.png"/>
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/mipmap-hdpi/mulufengexian.png"/>
    </issue>

    <issue
        id="IconLocation"
        severity="Warning"
        message="Found bitmap drawable `res/drawable/link_default.9.png` in densityless folder"
        category="Usability:Icons"
        priority="5"
        summary="Image defined in density-independent drawable folder"
        explanation="The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`."
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable/link_default.9.png"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-hdpi`: bf_footer.png, bg_green.png, bg_grey.png, bg_night.png, bg_vine_grey.png... (22 more)"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-hdpi"/>
    </issue>

    <issue
        id="IconDensities"
        severity="Warning"
        message="Missing the following drawables in `drawable-xhdpi`: btn_back_normal.png, btn_back_press.png"
        category="Usability:Icons"
        priority="4"
        summary="Icon densities validation"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/drawable-xhdpi"/>
    </issue>

    <issue
        id="IconMissingDensityFolder"
        severity="Warning"
        message="Missing density variation folders in `src/main/res`: drawable-mdpi, drawable-xxhdpi"
        category="Usability:Icons"
        priority="3"
        summary="Missing density folder"
        explanation="Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra-high, extra-extra-high). This lint check identifies folders which are missing, such as `drawable-hdpi`.&#xA;&#xA;Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see http://developer.android.com/resources/dashboard/screens.html"
        url="http://developer.android.com/guide/practices/screens_support.html"
        urls="http://developer.android.com/guide/practices/screens_support.html">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res"/>
    </issue>

    <issue
        id="AppLinkUrlError"
        severity="Error"
        message="At least one `host` must be specified"
        category="Usability"
        priority="5"
        summary="URL not supported by app for Firebase App Indexing"
        explanation="Ensure the URL is supported by your app, to get installs and traffic to your app from Google Search."
        url="https://g.co/AppIndexing/AndroidStudio"
        urls="https://g.co/AppIndexing/AndroidStudio"
        errorLine1="                &lt;data"
        errorLine2="                ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/AndroidManifest.xml"
            line="59"
            column="17"/>
    </issue>

    <issue
        id="AppLinkUrlError"
        severity="Error"
        message="`android:host` cannot be empty"
        category="Usability"
        priority="5"
        summary="URL not supported by app for Firebase App Indexing"
        explanation="Ensure the URL is supported by your app, to get installs and traffic to your app from Google Search."
        url="https://g.co/AppIndexing/AndroidStudio"
        urls="https://g.co/AppIndexing/AndroidStudio"
        errorLine1="                    android:host=&quot;&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/AndroidManifest.xml"
            line="60"
            column="21"/>
    </issue>

    <issue
        id="AppLinkUrlError"
        severity="Error"
        message="At least one `host` must be specified"
        category="Usability"
        priority="5"
        summary="URL not supported by app for Firebase App Indexing"
        explanation="Ensure the URL is supported by your app, to get installs and traffic to your app from Google Search."
        url="https://g.co/AppIndexing/AndroidStudio"
        urls="https://g.co/AppIndexing/AndroidStudio"
        errorLine1="                &lt;data"
        errorLine2="                ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/AndroidManifest.xml"
            line="80"
            column="17"/>
    </issue>

    <issue
        id="AppLinkUrlError"
        severity="Error"
        message="`android:host` cannot be empty"
        category="Usability"
        priority="5"
        summary="URL not supported by app for Firebase App Indexing"
        explanation="Ensure the URL is supported by your app, to get installs and traffic to your app from Google Search."
        url="https://g.co/AppIndexing/AndroidStudio"
        urls="https://g.co/AppIndexing/AndroidStudio"
        errorLine1="                    android:host=&quot;&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/AndroidManifest.xml"
            line="81"
            column="21"/>
    </issue>

    <issue
        id="AppLinkUrlError"
        severity="Error"
        message="`android:host` cannot be empty"
        category="Usability"
        priority="5"
        summary="URL not supported by app for Firebase App Indexing"
        explanation="Ensure the URL is supported by your app, to get installs and traffic to your app from Google Search."
        url="https://g.co/AppIndexing/AndroidStudio"
        urls="https://g.co/AppIndexing/AndroidStudio"
        errorLine1="                    android:host=&quot;&quot;"
        errorLine2="                    ~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/AndroidManifest.xml"
            line="110"
            column="21"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html"
        errorLine1="            &lt;Button"
        errorLine2="            ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/layout_hd_builder_dialog.xml"
            line="77"
            column="13"/>
    </issue>

    <issue
        id="ButtonStyle"
        severity="Warning"
        message="Buttons in button bars should be borderless; use `style=&quot;?android:attr/buttonBarButtonStyle&quot;` (and `?android:attr/buttonBarStyle` on the parent)"
        category="Usability"
        priority="5"
        summary="Button should be borderless"
        explanation="Button bars typically use a borderless style for the buttons. Set the `style=&quot;?android:attr/buttonBarButtonStyle&quot;` attribute on each of the buttons, and set `style=&quot;?android:attr/buttonBarStyle&quot;` on the parent layout"
        url="http://developer.android.com/design/building-blocks/buttons.html"
        urls="http://developer.android.com/design/building-blocks/buttons.html"
        errorLine1="            &lt;Button"
        errorLine2="            ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/layout_hd_builder_dialog.xml"
            line="89"
            column="13"/>
    </issue>

    <issue
        id="TextFields"
        severity="Warning"
        message="This text field does not specify an `inputType` or a `hint`"
        category="Usability"
        priority="5"
        summary="Missing `inputType` or `hint`"
        explanation="Providing an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). Similarly,a hint attribute displays a hint to the user for what is expected in the text field.&#xA;&#xA;The lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.&#xA;&#xA;If you really want to keep the text field generic, you can suppress this warning by setting `inputType=&quot;text&quot;`."
        errorLine1="        &lt;EditText"
        errorLine2="        ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="47"
            column="9"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `MainMenuWindow` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="    public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/MainMenuWindow.java"
            line="38"
            column="20"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `NavigationWindow` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="    public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/NavigationWindow.java"
            line="34"
            column="20"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `ProgressWindow` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="    public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/ProgressWindow.java"
            line="38"
            column="20"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `SettingWindow` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="    public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/popup/SettingWindow.java"
            line="38"
            column="20"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `SimplePopupWindow` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1=" public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                ~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/android/kooreader/SimplePopupWindow.java"
            line="23"
            column="17"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view `ZLAndroidWidget` overrides `onTouchEvent` but not `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="    public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/java/com/koolearn/klibrary/ui/android/view/ZLAndroidWidget.java"
            line="343"
            column="20"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="   &lt;ImageView"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bookmark_panel.xml"
            line="28"
            column="4"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="   &lt;ImageView"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bookmark_panel.xml"
            line="36"
            column="4"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="   &lt;ImageView"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bookmark_panel.xml"
            line="44"
            column="4"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="   &lt;ImageView"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bookmark_panel.xml"
            line="52"
            column="4"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="   &lt;ImageView"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bookmark_panel.xml"
            line="60"
            column="4"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageButton"
        errorLine2="        ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="14"
            column="9"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageButton"
        errorLine2="        ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="22"
            column="9"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageButton"
        errorLine2="        ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="31"
            column="9"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="                &lt;ImageView"
        errorLine2="                ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/layout_hd_builder_dialog.xml"
            line="30"
            column="17"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="    &lt;ImageView"
        errorLine2="    ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/library_tree_item.xml"
            line="9"
            column="5"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="        ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/list_bookmark.xml"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="        ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/list_note.xml"
            line="13"
            column="9"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageButton"
        errorLine2="        ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/mainmenu.xml"
            line="17"
            column="9"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageButton"
        errorLine2="        ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/mainmenu.xml"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="   &lt;ImageView"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/selection_panel.xml"
            line="28"
            column="4"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="   &lt;ImageView"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/selection_panel.xml"
            line="36"
            column="4"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="   &lt;ImageView"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/selection_panel.xml"
            line="44"
            column="4"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="   &lt;ImageView"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/selection_panel.xml"
            line="52"
            column="4"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="   &lt;ImageView"
        errorLine2="   ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/selection_panel.xml"
            line="60"
            column="4"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="        &lt;ImageView"
        errorLine2="        ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_head.xml"
            line="13"
            column="9"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="            &lt;ImageButton"
        errorLine2="            ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="175"
            column="13"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="            &lt;ImageButton"
        errorLine2="            ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="185"
            column="13"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="            &lt;ImageButton"
        errorLine2="            ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="196"
            column="13"/>
    </issue>

    <issue
        id="ContentDescription"
        severity="Warning"
        message="Missing `contentDescription` attribute on image"
        category="Accessibility"
        priority="3"
        summary="Image without `contentDescription`"
        explanation="Non-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.&#xA;&#xA;Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, just suppress the lint warning with a tools:ignore=&quot;ContentDescription&quot; attribute.&#xA;&#xA;Note that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`. See http://developer.android.com/guide/topics/ui/accessibility/checklist.html#special-cases."
        errorLine1="            &lt;ImageButton"
        errorLine2="            ^"
        quickfix="studio">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="207"
            column="13"/>
    </issue>

    <issue
        id="KeyboardInaccessibleWidget"
        severity="Warning"
        message="&apos;clickable&apos; attribute found, please also add &apos;focusable&apos;"
        category="Accessibility"
        priority="3"
        summary="Keyboard inaccessible widget"
        explanation="A widget that is declared to be clickable but not declared to be focusable is not accessible via the keyboard. Please add the `focusable` attribute as well."
        errorLine1="            android:clickable=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_head.xml"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="LabelFor"
        severity="Warning"
        message="No label views point to this text field with an `android:labelFor=&quot;@+id/edit_bookmark_text&quot;` attribute"
        category="Accessibility"
        priority="2"
        summary="Missing `labelFor` attribute"
        explanation="Text fields should be labelled with a `labelFor` attribute, provided your `minSdkVersion` is at least 17.&#xA;&#xA;If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint."
        errorLine1="        &lt;EditText"
        errorLine2="        ^">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="47"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;本地图书&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:title=&quot;本地图书&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/menu/activity_main_drawer.xml"
            line="8"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;在线图书&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:title=&quot;在线图书&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/menu/activity_main_drawer.xml"
            line="12"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;我的笔记&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:title=&quot;我的笔记&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/menu/activity_main_drawer.xml"
            line="16"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;我的书签&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:title=&quot;我的书签&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/menu/activity_main_drawer.xml"
            line="20"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;第一章&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;第一章&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bookmark_item.xml"
            line="28"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;txt格式书籍阅读，不一样的Marterial Design界面风格，可以记录不同颜色的笔记，流畅的翻页动画，个性化的字体、间距，排版设置，给你极致的阅读体验！&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;txt格式书籍阅读，不一样的Marterial Design界面风格，可以记录不同颜色的笔记，流畅的翻页动画，个性化的字体、间距，排版设置，给你极致的阅读体验！&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bookmark_item.xml"
            line="43"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;登录之后继续阅读！&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;登录之后继续阅读！&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/dialog.xml"
            line="10"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;去登录&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;去登录&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/dialog.xml"
            line="18"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;取消&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;取消&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/dialog.xml"
            line="28"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;修改笔记&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;修改笔记&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="69"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;删除笔记&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="                android:text=&quot;删除笔记&quot; />"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="78"
            column="17"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;文件夹&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;文件夹&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/library_tree_item.xml"
            line="25"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;本书暂时没有书签信息&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;本书暂时没有书签信息&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/list_bookmark.xml"
            line="38"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;暂无笔记&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;暂无笔记&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/list_note.xml"
            line="28"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;本地书籍&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;本地书籍&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/listview_localbook.xml"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;action_search&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:title=&quot;action_search&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/menu/main.xml"
            line="6"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;设置&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:title=&quot;设置&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/menu/main.xml"
            line="12"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;更多&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:title=&quot;更多&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/menu/main.xml"
            line="17"
            column="9"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;目录&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;目录&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/navigation_panel.xml"
            line="28"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;进度&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;进度&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/navigation_panel.xml"
            line="43"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;设置&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;设置&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/navigation_panel.xml"
            line="59"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;上一章&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;上一章&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/progress.xml"
            line="41"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;下一章&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;下一章&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/progress.xml"
            line="60"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;阅读设置&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;阅读设置&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_head.xml"
            line="26"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;亮度&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;亮度&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="25"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;字号&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;字号&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="72"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;翻页&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;翻页&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="166"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;背景&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;背景&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="234"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;模式&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="            android:text=&quot;模式&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="302"
            column="13"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;10pt&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="  android:hint=&quot;10pt&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/string_preference_dialog.xml"
            line="14"
            column="3"/>
    </issue>

    <issue
        id="HardcodedText"
        severity="Warning"
        message="Hardcoded string &quot;第2节: 巴菲特的房子&quot;, should use `@string` resource"
        category="Internationalization"
        priority="5"
        summary="Hardcoded text"
        explanation="Hardcoding text attributes directly in layout files is bad for several reasons:&#xA;&#xA;* When creating configuration variations (for example for landscape or portrait)you have to repeat the actual text (and keep it up to date when making changes)&#xA;&#xA;* The application cannot be translated to other languages by just adding new translations for existing string resources.&#xA;&#xA;There are quickfixes to automatically extract this hardcoded string into a resource lookup."
        errorLine1="        android:text=&quot;第2节: 巴菲特的房子&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/toc_tree_item.xml"
            line="20"
            column="9"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingLeft` you should probably also define `paddingRight` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1="    android:paddingLeft=&quot;5dp&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bookmark_item.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="RtlSymmetry"
        severity="Warning"
        message="When you define `paddingRight` you should probably also define `paddingLeft` for right-to-left symmetry"
        category="Internationalization:Bidirectional Text"
        priority="6"
        summary="Padding and margin symmetry"
        explanation="If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry."
        errorLine1=" android:paddingRight=&quot;10dip&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/color_preference.xml"
            line="6"
            column="2"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingLeft` with `android:paddingStart=&quot;5dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:paddingLeft=&quot;5dp&quot;>"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bookmark_item.xml"
            line="7"
            column="5"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingLeft` with `android:paddingStart=&quot;5dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:paddingLeft=&quot;5dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bookmark_item.xml"
            line="20"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingRight` with `android:paddingEnd=&quot;8dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:paddingRight=&quot;8dp&quot;>"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/bookmark_item.xml"
            line="21"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:paddingRight` with `android:paddingEnd=&quot;10dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1=" android:paddingRight=&quot;10dip&quot;"
        errorLine2=" ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/color_preference.xml"
            line="6"
            column="2"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_gravity=&quot;center_vertical|left&quot;"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/color_preference.xml"
            line="15"
            column="27"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:gravity=&quot;center_vertical|left&quot;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/color_preference.xml"
            line="23"
            column="20"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;13dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_marginLeft=&quot;13dip&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/color_preference.xml"
            line="24"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentLeft` with `android:layout_alignParentStart=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="18"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;5dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_marginLeft=&quot;5dp&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="19"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentRight` with `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="35"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;5dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_marginRight=&quot;5dp&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="36"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:gravity=&quot;left|top&quot;"
        errorLine2="                             ~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="53"
            column="30"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;30dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_marginLeft=&quot;30dp&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="76"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_toRightOf` with `android:layout_toEndOf=&quot;@id/edit_bookmark_save_text_button&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_toRightOf=&quot;@id/edit_bookmark_save_text_button&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/edit_bookmark.xml"
            line="77"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="    android:gravity=&quot;top|left&quot;"
        errorLine2="                     ~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/library_tree_item.xml"
            line="5"
            column="22"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;10dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_marginLeft=&quot;10dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/library_tree_item.xml"
            line="13"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentLeft` with `android:layout_alignParentStart=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/mainmenu.xml"
            line="20"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;15dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_marginLeft=&quot;15dp&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/mainmenu.xml"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;10dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_marginRight=&quot;10dp&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/mainmenu.xml"
            line="30"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentRight` with `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/mainmenu.xml"
            line="31"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentLeft` with `android:layout_alignParentStart=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/navigation_panel.xml"
            line="21"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentRight` with `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/navigation_panel.xml"
            line="52"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;12dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_marginLeft=&quot;12dp&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/progress.xml"
            line="40"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentRight` with `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/progress.xml"
            line="57"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;12dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_marginRight=&quot;12dp&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/progress.xml"
            line="59"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentLeft` with `android:layout_alignParentStart=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_head.xml"
            line="17"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_toRightOf` with `android:layout_toEndOf=&quot;@+id/textLight&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toRightOf=&quot;@+id/textLight&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="33"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:drawableLeft` with `android:drawableStart=&quot;@mipmap/sun_s&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:drawableLeft=&quot;@mipmap/sun_s&quot; />"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="34"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentRight` with `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="40"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;10dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_marginRight=&quot;10dp&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="42"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:drawableLeft` with `android:drawableStart=&quot;@mipmap/sun_l&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:drawableLeft=&quot;@mipmap/sun_l&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="43"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;@dimen/left&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_marginLeft=&quot;@dimen/left&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="51"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;@dimen/right&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_marginRight=&quot;@dimen/right&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="52"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_toLeftOf` with `android:layout_toStartOf=&quot;@id/tv_light_add&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toLeftOf=&quot;@id/tv_light_add&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="53"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_toRightOf` with `android:layout_toEndOf=&quot;@id/tv_light_minus&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toRightOf=&quot;@id/tv_light_minus&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="54"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_toRightOf` with `android:layout_toEndOf=&quot;@id/textText&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toRightOf=&quot;@id/textText&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="78"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;10dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_marginRight=&quot;10dp&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="86"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_toRightOf` with `android:layout_toEndOf=&quot;@id/textPage&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toRightOf=&quot;@id/textPage&quot;>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="173"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentLeft` with `android:layout_alignParentStart=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_alignParentLeft=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="179"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;18dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_marginLeft=&quot;18dp&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="189"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_toRightOf` with `android:layout_toEndOf=&quot;@+id/btn_page_simulation&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_toRightOf=&quot;@+id/btn_page_simulation&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="190"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;18dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_marginLeft=&quot;18dp&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="200"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_toRightOf` with `android:layout_toEndOf=&quot;@+id/btn_page_cover&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_toRightOf=&quot;@+id/btn_page_cover&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="201"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_alignParentRight` with `android:layout_alignParentEnd=&quot;true&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_alignParentRight=&quot;true&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="211"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;18dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_marginLeft=&quot;18dp&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="212"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;10dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_marginRight=&quot;10dp&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="213"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_toRightOf` with `android:layout_toEndOf=&quot;@id/textBackground&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toRightOf=&quot;@id/textBackground&quot;>"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="241"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;18dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_marginLeft=&quot;18dp&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="255"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;18dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_marginLeft=&quot;18dp&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="264"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;18dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_marginLeft=&quot;18dp&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="273"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;18dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_marginLeft=&quot;18dp&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="282"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;10dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_marginRight=&quot;10dp&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="283"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_toRightOf` with `android:layout_toEndOf=&quot;@id/textModel&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="            android:layout_toRightOf=&quot;@id/textModel&quot;"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="308"
            column="13"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginRight` with `android:layout_marginEnd=&quot;10dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="                android:layout_marginRight=&quot;10dp&quot;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/setting_panel.xml"
            line="316"
            column="17"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_gravity=&quot;center_vertical|left&quot;"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/style_item.xml"
            line="16"
            column="27"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_gravity=&quot;center_vertical|left&quot;"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/style_item.xml"
            line="24"
            column="27"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Use &quot;`start`&quot; instead of &quot;`left`&quot; to ensure correct behavior in right-to-left locales"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:gravity=&quot;center_vertical|left&quot;"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/style_item.xml"
            line="32"
            column="20"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;13dip&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="  android:layout_marginLeft=&quot;13dip&quot;"
        errorLine2="  ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/style_item.xml"
            line="33"
            column="3"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:layout_marginLeft` with `android:layout_marginStart=&quot;25dp&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:layout_marginLeft=&quot;25dp&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/toc_tree_item.xml"
            line="15"
            column="9"/>
    </issue>

    <issue
        id="RtlHardcoded"
        severity="Warning"
        message="Consider replacing `android:drawableLeft` with `android:drawableStart=&quot;@android:drawable/divider_horizontal_dark&quot;` to better support right-to-left layouts"
        category="Internationalization:Bidirectional Text"
        priority="5"
        summary="Using left/right instead of start/end attributes"
        explanation="Using `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.&#xA;&#xA;For XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE**: If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/right attributes. On older platforms, where RTL is not supported and the start/right attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.&#xA;&#xA;(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=&quot;start&quot;` rather than `gravity=&quot;left|start&quot;`.)"
        errorLine1="        android:drawableLeft=&quot;@android:drawable/divider_horizontal_dark&quot;"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/res/layout/toc_tree_item.xml"
            line="19"
            column="9"/>
    </issue>

    <issue
        id="RtlEnabled"
        severity="Warning"
        message="The project references RTL attributes, but does not explicitly enable or disable RTL support with `android:supportsRtl` in the manifest"
        category="Internationalization:Bidirectional Text"
        priority="3"
        summary="Using RTL attributes without enabling RTL support"
        explanation="To enable right-to-left support, when running on API 17 and higher, you must set the `android:supportsRtl` attribute in the manifest `&lt;application>` element.&#xA;&#xA;If you have started adding RTL attributes, but have not yet finished the migration, you can set the attribute to false to satisfy this lint check.">
        <location
            file="/Users/LeonTao/AndroidStudioProjects/556_Book/BookReader/library/reader/src/main/AndroidManifest.xml"/>
    </issue>

</issues>
